scarlet :: ColorType :: self.m.value <-- @red
red :: ColorType :: self.m.value <-- @red
blue :: ColorType :: self.m.value <-- @blue
adam	:: ProperNounNP :: self.m.ontological-category <-- @person :: self.m.gender <-- @male
scarlet	:: ProperNounNP :: self.m.ontological-category <-- @person :: self.m.gender <-- @female
block   :: PhysicalNounType  :: self.m.ontological-category <-- @block :: self.m.scale <-- @size
move    :: SelfMotionType  :: self.m.actionary <-- @move :: self.m.speed <-- "5"
walk    :: SelfMotionType  :: self.m.actionary <-- @walk :: self.m.speed <-- "3"
run     :: SelfMotionType  :: self.m.actionary <-- @run  :: self.m.speed <-- "7" 
block   :: LexicalVerbType :: self.m.actionary <-- @block-verb
box     :: PhysicalNounType  :: self.m.ontological-category <-- @box :: self.m.scale <-- @size
room    :: PhysicalNounType  :: self.m.ontological-category <-- @room :: self.m.scale <-- @size
be      :: BeCopula  :: self.m.actionary <-- @be
see     :: PerceptionType :: self.m.actionary <-- @see
hear    :: PerceptionType :: self.m.actionary <-- @hear
sprint  :: SelfMotionType  :: self.m.actionary <-- @run  :: self.m.speed <-- "8"
jog  :: SelfMotionType  :: self.m.actionary <-- @run  :: self.m.speed <-- "6"
enter :: PathVerbType   :: self.m.actionary <-- @enter :: self.m.landmark.ontological-category <-- @container
## The following should (eventually) all produce errors. Uncomment to test.
## Test for parent not existing:
# test :: DoesntExist :: some.chain <-- illegal
## Test for slotchain not existing
# test :: Color :: some.chain <-- @red
## Test for value not existing
# test :: Color :: self.m.value <-- @doesntexist
## Test for inconsistent ontology values
# test :: Color :: self.m.value <-- @female
## Test for missing ontology value
# test :: ProperNountNP :: self.m.number <-- @singular

