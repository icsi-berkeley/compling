//============================================================
// UPPER ONTOLOGY
//============================================================

(type Element sub Individual)

//============================================================
// Discourse_Segment
//============================================================

(type Discourse_Segment sub Interval
	rel
	(speaker Human)
	(addressee Human)
	(attentional_focus Entity)
	(speech_act Speech_Act))


//============================================================
// Simple Process
//============================================================

(persistent rel relations Interval Important_Relations)


(type Process sub Element Interval
	rel
	(protagonist Element)
	(location Element)
	(instrument Element)
	(affectedness Affectedness)
	(inherent_aspect Inherent_Aspect))


(type Proto_Transitive sub Process
	rel
	(proto_agent Element)
	(proto_patient Element))


(type State sub Process
	rel
	(category Modification_Category)
	(inherent_aspect Inherent_State))


(type State_Change sub Process
	rel	
	(initial_state State)
	(means Process)
	(resulting_state State))


(type Action sub Process)


(type Intransitive_State sub State)


(type Two_Participant_State sub State
	rel
	(experiencer Element)
	(percept Element)
	eq
	(experiencer protagonist))


(type Mental_State sub Two_Participant_State
	rel
	(experiencer Human))


(type Intransitive_Action sub Action)


(type Expression sub Intransitive_Action)


(type Motion sub Action
	rel
	(mover Entity))


(type Translational_Motion sub Motion
	rel
	(spg Source_Path_Goal))
		

(type Self_Motion sub Intransitive_Action Motion
	eq
	(mover protagonist))


(type Translational_Self_Motion sub Intransitive_Action Translational_Motion
	eq
	(mover protagonist))


(type Force_Application sub Action
	rel
	(contact Contact)
	(force_supplier Element)
	(force_recipient Element)
	(effector Body_Part)
	eq
	(force_supplier protagonist))


(type Continuous_Force_Application sub Force_Application)


(type Forceful_Motion sub Force_Application)


(type Translational_Forceful_Motion sub Forceful_Motion Translational_Motion)


(type Agentive_Impact sub Forceful_Motion)


(type Cause_Change sub Action
	rel
	(actor Element)
	(undergoer Element)
	eq
	(actor protagonist))


(type Obtainment sub Action
	rel
	(obtainer Element)
	(obtained Element)
	eq
	(obtainer protagonist))


(type Ingestion sub Action
	rel
	(ingester Element)
	(ingested Element)
	eq
	(ingester protagonist))


(type Perception sub Action
	rel
	(perceiver Element)
	(percept Element)
	eq
	(perceiver protagonist))


(type Uncategorized_Transitive_Action sub Action
	rel
	(agent Element)
	(patient Element)
	eq
	(agent protagonist))


(type Communication sub Action
	rel
	(communicator Element)
	(audience Element)
	(communicated Element)
	eq
	(communicator protagonist))


(type Transfer sub Action
	rel
	(giver Element)
	(recipient Element)
	(theme Element)
	eq
	(giver protagonist))


//============================================================
// Complex Processes
//============================================================


(type Complex_Process sub Process
	rel
	(process1 Process)
	(process2 Process))
	

(type Serial_Processes sub Complex_Process)


(type Concurrent_Processes sub Complex_Process)


(type Cause_Effect sub Complex_Process
	rel
	(cause Process)
	(effect Process)
	eq
	(cause process1)
	(effect process2))


(type Joint_Motion sub Concurrent_Processes
	rel
	(principle_mover Entity)
	(other_mover Entity)
	(cfa Continuous_Force_Application)
	(propelling_motion Translational_Motion)
	(secondary_motion Translational_Motion)
	eq
	(propelling_motion process1)
	(secondary_motion process2))


(type Caused_Motion sub Cause_Effect 
	rel
	(spg Source_Path_Goal)
	(forceful_motion Forceful_Motion)
	(motion Translational_Motion)
	eq
	(forceful_motion cause)
	(motion effect))



(type Conditional_Processes sub Complex_Process
	rel
	(condition Process)
	(outcome Process)
	eq
	(condition process1)
	(outcome process2))


(type Repeat_Until sub Complex_Process
	rel
	(repetition Process)
	(condition Process)
	eq
	(repetition process1)
	(condition process2))


(type Means_And_Ends sub Complex_Process
	rel
	(means Process)
	(ends Process)
	eq
	(means process1)
	(ends process2))


//============================================================
// Relations
//============================================================

(type Important_Relations)


(type BenefactionOrMalefaction sub Important_Relations
	rel
	(benefactor Element)
	(beneficiary Element)
	(benefit Process))


(type Negation sub Important_Relations
	rel
	(process Process))


(type Possession sub Important_Relations
	rel
	(persistent possessor Animate)
	(persistent possessed Element))


(type Warning sub Important_Relations
	rel
	(warner Human)
	(warned Human)
	(prohibited_action Process)
	(threatened_consequence Process))

//============================================================
// Image Schemas
//============================================================	

(type Image_Schema)


(type Simple_Image_Schema sub Image_Schema)


(type Complex_Image_Schema sub Image_Schema)


(type Trajector_Landmark sub Simple_Image_Schema
	rel
	(trajector Entity)
	(landmark Entity))


(type Up_Down sub Trajector_Landmark
	rel
	(highpoint Element)
	(lowpoint Element))


(type Above sub Up_Down
	eq
	(highpoint trajector)
	(lowpoint landmark))


(type Below sub Up_Down
	eq
	(highpoint landmark)
	(lowpoint trajector))


(type Container sub Simple_Image_Schema
	rel
	(container Physical_Container)
	(outside Element)
	(inside Element)
	(portal Element))


(type Orientation sub Simple_Image_Schema
	rel
	(body Element)
	(short-axis Element)
	(long-axis Element))


(type Boundary sub Simple_Image_Schema
	rel
	(boundary Element)
	(areaA Element)
	(areaB Element))


(type Contact sub Simple_Image_Schema
	rel
	(material1 Element)
	(material2 Element)
	(contact_area Element))
	

(type Part_Whole sub Simple_Image_Schema
	rel
	(part Element)
	(whole Element))


(type Heading sub Simple_Image_Schema
	rel
	(reference Element))


(type Absolute_Heading sub Heading
	rel
	(direction Direction)
	eq
	(direction reference))


(type Relative_Heading sub Heading
	rel
	(landmark Concrete_Entity)
	eq
	(landmark reference))


(type Source_Path_Goal sub Complex_Image_Schema
	rel
	(trajector Element)
	(source Element)
	(path Path)
	(goal Element)
	(deixis Deixis))

//============================================================
// Speech Acts
//============================================================


(type Routine sub Process)


(type Speech_Act
	rel
	(speaker Human)
	(addressee Human)
	(text String)
	(forcefulness Forcefulness)
	(DS Discourse_Segment))


(type Explaining sub Speech_Act)


(type Answering sub Speech_Act
	rel
	(original_prompt Speech_Act))


(type Approving sub Speech_Act
	rel
	(action Element))


(type Admonishing sub Speech_Act
	rel
	(fault Element))


(type Response_Eliciting_Speech_Act sub Speech_Act)


(type Requesting_Action sub Response_Eliciting_Speech_Act)

	
(type Requesting_Answer sub Response_Eliciting_Speech_Act)


(type Calling sub Response_Eliciting_Speech_Act)


(type Exclaiming sub Speech_Act)
	

(type Practicing sub Speech_Act)



//===============================================
// Entities and places
//===============================================

(type Property_Filler)


(type Entity sub Element)


(type Abstract_Entity sub Entity)


(type Concrete_Entity sub Entity
	rel
	(persistent location Element)	// this is to get around the entity-to-location construal
	(persistent height String)
	(persistent size Size_Property)
	(persistent color Color_Property)
	(persistent physical_component Concrete_Entity)
	(persistent nonphysical_component Abstract_Entity))


(type Why sub Entity)


(type Howcome sub Entity)


(type How_Many sub Entity)