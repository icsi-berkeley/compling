//============================================================
// Everything in this section is assumed as prior knowledge
//============================================================

//========================================
// Pronouns
//========================================

Construction wo3
	subcase of Pronoun_Root
	form
		constraints
			self.f.orth <-- "wo3"
	meaning: @Human
		constraints
			rd.discourse_participant_role <-- @Speaker
			rd.set_size <-- @Singleton


Abstract Construction wo3men2-variant
	subcase of Pronoun_Root 
	meaning : @Human
		evokes RD as rd
		constraints
			rd.set_size <-- @Group


Construction wo3men2-Cmp
	subcase of wo3men2-variant
	form
		constraints
			self.f.orth <-- "wo3+men2"


Construction wo3men-Cmp
	subcase of wo3men2-variant
	form
		constraints
			self.f.orth <-- "wo3+men"


Construction ni3
	subcase of Pronoun_Root
	form
		constraints
			self.f.orth <-- "ni3"
	meaning: @Human
		constraints
			rd.discourse_participant_role <-- @Addressee
			rd.set_size <-- @Singleton


Abstract Construction ni3men2-variant
	subcase of Pronoun_Root 
	meaning : @Human
		evokes RD as rd
		constraints
			rd.set_size <-- @Group


Construction ni3men2-Cmp
	subcase of wo3men2-variant
	form
		constraints
			self.f.orth <-- "ni3+men2"


Construction ni3men-Cmp
	subcase of wo3men2-variant
	form
		constraints
			self.f.orth <-- "ni3+men"


Construction zan2
	subcase of Pronoun_Root
	form
		constraints
			self.f.orth <-- "zan2"
	meaning: @Human
		constraints
			rd.discourse_participant_role <-- @Speaker
			rd.set_size <-- @Group


Abstract Construction zan2men2-variant
	subcase of Pronoun_Root 
	meaning : @Human
		evokes RD as rd
		constraints
			rd.set_size <-- @Group


Construction zan2men2-Cmp
	subcase of wo3men2-variant
	form
		constraints
			self.f.orth <-- "zan2+men2"


Construction zan2men-Cmp
	subcase of wo3men2-variant
	form
		constraints
			self.f.orth <-- "zan2+men"


Construction ta1
	subcase of Pronoun_Root
	form
		constraints
			self.f.orth <-- "ta1"	
	meaning: @Human
		constraints
			rd.givenness <-- @Given
			rd.set_size <-- @Singleton


Abstract Construction men_variant
	subcase of Morpheme


Construction men
	subcase of men_variant
	form
		constraints
			self.f.orth <-- "men"


Construction men2
	subcase of men_variant
	form
		constraints
			self.f.orth <-- "men2"


Construction zi4
	subcase of Morpheme
	form
		constraints
			self.f.orth <-- "zi4"


Construction ji3
	subcase of Morpheme
	form
		constraints
			self.f.orth <-- "ji3"


Construction zi4ji3
	subcase of Reflexive_Marker
	constructional
		constituents
			a:zi4
			b:ji3
	form
		constraints
			a.f meets b.f


//============================================================
// Demonstratives
//============================================================

// FIXME: what about proximity?

Abstract Construction zhe4_variant-D
	subcase of Demonstrative_Root
	meaning			
		constraints
			rd.discourse_participant_role <-- @Attentional_Focus
			rd.set_size <-- @Singleton
			rd.givenness <-- @Identifiable


Construction zher4-D
	subcase of Demonstrative_Loc_Root
	form
		constraints
			self.f.orth <-- "zher4"


Construction zhe4-D
	subcase of zhe4_variant-D
	form
		constraints
			self.f.orth <-- "zhe4"


Construction zhei4-D
	subcase of zhe4_variant-D
	form
		constraints
			self.f.orth <-- "zhei4"


Construction nar3-D
	subcase of Demonstrative_Loc_Root
	form
		constraints
			self.f.orth <-- "nar3"
	meaning : Trajector_Landmark
		evokes RD as rd
		constraints
			self.m.landmark <--> rd.referent
			rd.givenness <-- @Unknown


Abstract Construction na4_variant-D
	subcase of Demonstrative_Root
	meaning
		constraints
			rd.discourse_participant_role <-- @Attentional_Focus
			rd.set_size <-- @Singleton
			rd.givenness <-- @Identifiable


Construction na4-D
	subcase of na4_variant-D
	form
		constraints
			self.f.orth <-- "na4"


Construction nar4-D
	subcase of na4_variant-D
	form
		constraints
			self.f.orth <-- "nar4"


Construction nei4-D
	subcase of na4_variant-D
	form
		constraints
			self.f.orth <-- "nei4"


Construction ne4-D
	subcase of na4_variant-D
	form
		constraints
			self.f.orth <-- "ne4"


Construction shei2-N
	subcase of Demonstrative_Root
	form
		constraints
			self.f.orth <-- "shei2"
	meaning: @Human
		constraints
			rd.givenness <-- @Unknown


Construction nei3-D
	subcase of Demonstrative_Root
	form
		constraints
			self.f.orth <-- "nei3"
	meaning: @Element
		constraints
			rd.givenness <-- @Unknown


Construction shen2me-Cmp
	subcase of Ref_Exp, Morpheme
	form
		constraints
			self.f.orth <-- "shen2+me"
	meaning: @Element
		constraints
			rd.givenness <-- @Unknown



//============================================================
// Negation, etc
//============================================================


Construction bie2
	subcase of Negation_Root
	form
		constraints	
			self.f.orth <-- "bie2"
	meaning
		evokes Warning as warning
		evokes Discourse_Segment as DS
		constraints
			self.m.process <--> warning.prohibited_action
			self.m.process.protagonist <--> warning.warned
			warning.warned <--> DS.addressee
			warning.warner <--> DS.speaker


Abstract Construction bu4_variant
	subcase of Negation_Root


Construction bu4
	subcase of bu4_variant
	form
		constraints	
			self.f.orth <-- "bu4"


Construction bu2
	subcase of bu4_variant
	form
		constraints	
			self.f.orth <-- "bu2"


Construction bu
	subcase of bu4_variant
	form
		constraints	
			self.f.orth <-- "bu"


Construction xu3
	subcase of Unknown_Morpheme
	form
		constraints	
			self.f.orth <-- "xu3"


Construction bu4xu3
	subcase of Negation_Marker
	constructional
		constituents
			b : bu4_variant
			x : xu3
	meaning
		evokes Warning as warning
		evokes Discourse_Segment as DS
		constraints
			self.m.process <--> warning.prohibited_action
			self.m.process.protagonist <--> warning.warned
			warning.warned <--> DS.addressee
			warning.warner <--> DS.speaker


Construction bu4shi4
	subcase of Negation_Marker
	constructional
		constituents
			b : bu4_variant
			s : shi4-V


Construction beng2
	subcase of Negation_Root
	form
		constraints	
			self.f.orth <-- "beng2"


Construction mei2
	subcase of Negation_Root
	form
		constraints	
			self.f.orth <-- "mei2"


Construction mei2you3-Cmp
	subcase of Negation_Root
	form
		constraints	
			self.f.orth <-- "mei2+you3"


Construction fa3
	subcase of Morpheme
	form
		constraints	
			self.f.orth <-- "fa3"


Construction mei2fa3-Cmp
	subcase of Negation_Root
	form
		constraints	
			self.f.orth <-- "mei2+fa3"


//===================================
// Two Participant States
//===================================

Construction zai4-V
	subcase of Verb_Root 
	form
		constraints
			self.f.orth <-- "zai4"
	meaning : Located

Construction you3-V2
	subcase of Verb_Root 
	form
		constraints
			self.f.orth <-- "you3"
	meaning : Exist

Construction shi4-V
	subcase of Verb_Root 
	form
		constraints
			self.f.orth <-- "shi4"
	meaning : Copula

//============================================================
// Numbers
//============================================================


Abstract Construction yi1_variant-Digit
	subcase of Digit
	meaning
		constraints
			self.m.value <-- "1"
			self.m.set_size <-- @Singleton


Construction yi1
	subcase of yi1_variant-Digit
	form
		constraints
			self.f.orth <-- "yi1"


Construction yi4
	subcase of yi1_variant-Digit
	form
		constraints
			self.f.orth <-- "yi4"


Abstract Construction er4_variant-Digit
	subcase of Digit
	meaning
		constraints
			self.m.value <-- "2"
			self.m.set_size <-- @Pair


Construction er
	subcase of er4_variant-Digit
	form
		constraints
			self.f.orth <-- "er"


Construction er3
	subcase of er4_variant-Digit
	form
		constraints
			self.f.orth <-- "er3"


Construction er4
	subcase of er4_variant-Digit
	form
		constraints
			self.f.orth <-- "er4"


Construction liang3
	subcase of Digit
	form
		constraints
			self.f.orth <-- "liang3"
	meaning
		constraints
			self.m.value <-- "2"
			self.m.set_size <-- @Pair
	

Construction shi2
	subcase of Digit
	form
		constraints
			self.f.orth <-- "shi2"
	meaning
		constraints
			self.m.value <-- "10"
			self.m.set_size <-- @Multitude
			

