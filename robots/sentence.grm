//
// sentence.grm
//
// The general cxn S is the root of most (all?) speech acts /

general construction S
    subcase of RootType 
    meaning: EventDescriptor


general construction Utterance
    subcase of RootType // need to review this type 
    constructional 
        constituents
            core: S
            end: EMark  // punctuation like . ! ?
    form 
        constraints  
            core.f meets end.f
    meaning: DiscourseElement
        constraints
          self.m.content <--> core.m
          
// e.g.  Robot1, move into the box!
construction AddressedImperative  // replace AddressedUtterance, only uses Imperative.
    subcase of Utterance
    constructional 
        constituents
        	core: Imperative
            addr: NP
            comma: Comma
            end: IMark     
    form
        constraints
            addr.f meets comma.f 
            comma.f meets core.f
    meaning
        constraints
            self.m.addressee <--> addr.m  // also profiledParticipant
			self.m.mood <-- "Imperative" // (testing: 7/8/14, ST)
			core.m.profiledParticipant <--> self.m.addressee

general construction Imperative
	subcase of S 
  constructional // 8/9/13
        constituents
          optional end :IMark

construction SimpleImperative
    subcase of Imperative  // S
    constructional 
        constituents
            vp: VP
        constraints 
            vp.features.verbform <-- Base
    meaning
        constraints
            self.m <--> vp.ed
// Punctuation

general construction EMark 
    subcase of Word

construction PMark
    subcase of EMark
    form 
        constraints
            self.f.orth <-- "."
            
construction QMark
    subcase of EMark
    form 
        constraints
            self.f.orth <-- "?"
            
construction IMark
    subcase of EMark
    form 
        constraints
            self.f.orth <-- "!"

construction Comma
    subcase of Word
    form 
        constraints
            self.f.orth <-- ","

// This general cxn does the agreement between subj and verb
general construction S-With-Subj  
    subcase of S
    constructional
        constituents
            subj: NP
            fin: HasVerbFeatures  // for modals, not VP
        constraints
        	fin.features.verbform <-- Finite	
        	subj.features.person <--> fin.features.person
        	subj.features.number <--> fin.features.number
            subj.features.case <-- "nom"
    meaning
        constraints
	       subj.m <--> self.m.profiledParticipant
 	
construction Declarative
    subcase of S-With-Subj
    constructional
        constituents
	       fin: VP
    form
        constraints
	       subj.f before fin.f
    meaning
        constraints
           self.m <--> fin.ed
		   fin.ed.profiledParticipant.ontological-category <--> subj.m.ontological-category  
		   
// Some Question types

general construction Question  // both Aux and Finite inversions
	subcase of S  

general construction YN-Question  
	subcase of  Question

general construction S-With-Finite-Inversion  
	subcase of S-With-Subj, YN-Question
  		   
construction  S-With-Copula-Inversion-PP //special case
    subcase of S-With-Finite-Inversion
    constructional
        constituents
    	   fin: BeCopula
    	   pp: Loc-PP 
        constraints  
    form
        constraints
            fin.f meets subj.f 
            subj.f before pp.f
    meaning
        constraints
        	self.fin.m.actionary <-- @be2
        	subj.m <--> self.m.profiledParticipant  // from S-With-Subj
            fin.m.protagonist <--> subj.m
            //pp.m.trajector <--> subj.m
			self.fin.m.state <--> pp.m
            self.m.eventProcess <--> fin.m 
            
construction S-With-Copula-Inversion-Adj // tested 10/29/12
    subcase of S-With-Finite-Inversion
    constructional
        constituents
    	   fin: BeCopula
    	   adj: Adjective 
    	   //optional end: QMark  // punctuation   
        constraints
            //fin.features.expectedVerbForm <--> vp.features.verbform 
    form
        constraints
            fin.f meets subj.f 
            subj.f before adj.f
    meaning
        constraints
    		self.fin.m.actionary <-- @be2
        	self.fin.m.protagonist <--> self.m.profiledParticipant
        	//self.adj.m.modifiedThing <--> self.m.profiledParticipant	// Do we want this to bind like this? Then "red" from "is the box red?" points back to box as if it already modifies it
        	self.adj.m.domain <--> self.m.profiledParticipant.ontological-category
			self.fin.m.state <--> adj.m
			self.m.eventProcess <--> fin.m
			
//   Questions
// 



construction YNQuesUtterance  
    subcase of Utterance
    constructional 
        constituents
            core: YN-Question
            end: QMark    
    form
        constraints
            core.f meets end.f 
    meaning 
        constraints
            self.m.mood <-- "YN-Question" // this is where we want mood	
            self.m.content <--> core.m
            


// WH-Questions (added 7/14/14, ST)

general construction WH-Question  
	subcase of  Question
	
construction WHQuesUtterance  
    subcase of Utterance
    constructional 
        constituents
            core: WH-Question
            end: QMark  //    ?
    form
        constraints
            core.f meets end.f 
    meaning
        constraints
            self.m.mood <-- "WH-Question" // this is where we want mood
 			self.m.content <--> core.m
 			
construction SubjWH-Question
    subcase of WH-Question, S-With-Subj
    constructional
        constituents
           subj: WH-NP
    	   fin: VP
        constraints
    form
        constraints
	       subj.f before fin.f
    meaning
        constraints
	       self.m <--> fin.ed 				


// Construction for "what" - testing (added from Base or written here, 7/14/14, ST)

general construction WH-NP
   subcase of NP

general construction WH-Specifier  // TODO these need work, questionRD?
   	subcase of Specifier
   	
construction WhSpecifierPlusKernel
  subcase of Specifier2PlusKernel, WH-NP
  constructional
    constituents   
      s: WH-Specifier
      k: Kernel
   meaning
	constraints
		s.m <-> k.m


construction What-Specifier
   subcase of WH-Specifier
   form
      constraints
         self.f.orth <-- "what"
   meaning: QuestionRD
      constraints
 		self.m.specificWh <-- @what


construction Which-Specifer
   subcase of WH-Specifier
   form
      constraints
         self.f.orth <-- "which"
   meaning: QuestionRD
      constraints
 		self.m.specificWh <-- @which
 		 			
construction What-WH-NP
   subcase of WH-NP, Word
   form
      constraints
         self.f.orth <-- "what"
   meaning: QuestionRD
      constraints
 		self.m.specificWh <-- @what
 		
construction Where-WH-NP
   subcase of WH-NP, Word
   form
      constraints
         self.f.orth <-- "where"
   meaning: QuestionRD
      constraints
 		self.m.specificWh <-- @where 		

schema QuestionRD
	subcase of RD//, EventRD  , RelativizedRD  7/18/14
	roles
		specificWh: @wh-word
	
/** Below are constructions for conditionals, particularly in the context of commands.
For example: "If the block is red, pick up the block"; "If the room is red, enter the room", and so on,
in which the "If" clause constitutes a Boolean and the "then" clause constitutes an Imperative. */

// Written or added from Spanish grammar on 7/8/14 (ST)


// Added 6/20/14 (ST)
construction If
	subcase of Conjunction
   	form
		constraints
         	self.f.orth <-- "if"
 
// Added 6/20/14 (ST) 
 construction Then-Conditional
	subcase of Conditional
   	form
		constraints
         	self.f.orth <-- "then"
         	
// Added 6/20/14 (ST)
 general construction Conditional  // just the above for now
	subcase of Word
	
	
// Added 6/20/14 (ST)
schema ComplexED
   subcase of EventDescriptor
   roles
   		complexKind: @event-kind
   		ed1: EventDescriptor
   		ed2: EventDescriptor
   			      
// Added and modified 6/20/14 (ST)
construction ConditionalImperative 		// test 2/12/14
    subcase of Imperative
    constructional 
        constituents
			cond: If  //: if
			bool:Declarative //you hit a bump, the box is too big, etc. 
			optional c: Comma
			optional then2: Then-Conditional
            core: SimpleImperative
        constraints 
            core.vp.features.verbform <-- Base    // modified because of changed Verbform for Spanish
	form
		constraints  // if bool (then) core
			cond.f meets bool.f
			bool.f meets then2.f
			bool.f before core.f
			//then2.f meets core.f
    meaning: ComplexED
        constraints
        	self.m.profiledParticipant <--> core.m.profiledParticipant
            self.m.ed1 <--> bool.m
			self.m.ed2 <--> core.m
			self.m.complexKind <-- @conditional
			//self.m.eventProcess <--> self.m.ed2.eventProcess    // Should this be the case?



construction Addressed-ConditionalImperative 
	subcase of Utterance
	constructional
	   constituents
	      addr: NP
	      comma: Comma
	      core: ConditionalImperative
	      end: IMark
	 form
	    constraints
	       addr.f meets comma.f
	       comma.f meets core.f
	       core.f meets end.f
	 meaning
	     constraints
	        self.m.addressee <--> addr.m
	        self.m.mood <-- "Conditional-Imperative"
	        core.m.profiledParticipant <--> self.m.addressee
	
	
	
construction Addressed-Declarative 
	subcase of Utterance
	constructional
	   constituents
	      addr: NP
	      comma: Comma
	      core: Declarative
	 form
	    constraints
	       addr.f meets comma.f
	       comma.f meets core.f
	 meaning
	     constraints
	        self.m.addressee <--> addr.m
	        self.m.mood <-- "Declarative"